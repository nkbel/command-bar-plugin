import * as vscode from 'vscode';
import * as path from 'path';

export function activate(context: vscode.ExtensionContext) {
    console.log('–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞ "My Simple Plugin"');

    // –ö–æ–º–∞–Ω–¥–∞ Hello World
    let helloWorldCommand = vscode.commands.registerCommand('my-simple-plugin.helloWorld', () => {
        vscode.window.showInformationMessage('–ü—Ä–∏–≤–µ—Ç –æ—Ç –º–æ–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –ø–ª–∞–≥–∏–Ω–∞ –¥–ª—è VS Code! üéâ');
    });

    // –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞–∑–∞ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    let showTimeCommand = vscode.commands.registerCommand('my-simple-plugin.showTime', () => {
        const now = new Date();
        const timeString = now.toLocaleTimeString('ru-RU');
        const dateString = now.toLocaleDateString('ru-RU');
        
        vscode.window.showInformationMessage(`–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${timeString}, –î–∞—Ç–∞: ${dateString}`);
        console.log(`–ü–ª–∞–≥–∏–Ω –ø–æ–∫–∞–∑–∞–ª –≤—Ä–µ–º—è: ${timeString}`);
    });

    // –£–ª—É—á—à–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
    let analyzeFileCommand = vscode.commands.registerCommand('my-simple-plugin.analyzeFile', () => {
        const editor = vscode.window.activeTextEditor;
        
        if (!editor) {
            vscode.window.showWarningMessage('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞!');
            return;
        }

        const document = editor.document;
        const text = document.getText();
        const lineCount = document.lineCount;
        const fileName = document.fileName.split(/[\\/]/).pop() || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–∞–π–ª';
        const fileExtension = path.extname(document.fileName);
        const languageId = document.languageId;
        
        // –ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        const wordCount = text.split(/\s+/).filter(word => word.length > 0).length;
        const charCount = text.length;
        const charCountWithoutSpaces = text.replace(/\s+/g, '').length;
        
        // –ü–æ–¥—Å—á–µ—Ç –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫
        let emptyLines = 0;
        for (let i = 0; i < lineCount; i++) {
            const line = document.lineAt(i);
            if (line.text.trim().length === 0) {
                emptyLines++;
            }
        }

        // –ê–Ω–∞–ª–∏–∑ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        const selection = editor.selection;
        let selectionInfo = '–ù–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è';
        if (!selection.isEmpty) {
            const selectedText = document.getText(selection);
            const selectedLines = selection.end.line - selection.start.line + 1;
            const selectedWords = selectedText.split(/\s+/).filter(word => word.length > 0).length;
            const selectedChars = selectedText.length;
            selectionInfo = `–í—ã–¥–µ–ª–µ–Ω–æ: ${selectedLines} —Å—Ç—Ä–æ–∫, ${selectedWords} —Å–ª–æ–≤, ${selectedChars} —Å–∏–º–≤–æ–ª–æ–≤`;
        }

        // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        const analysisResult = `
üìä –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞: ${fileName}

üìÅ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ: ${fileExtension || '–Ω–µ—Ç'}
üî§ –Ø–∑—ã–∫: ${languageId}
üìù –°—Ç—Ä–æ–∫ –≤—Å–µ–≥–æ: ${lineCount}
üìÑ –ü—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫: ${emptyLines}
üìà –°—Ç—Ä–æ–∫ —Å –∫–æ–¥–æ–º: ${lineCount - emptyLines}
üî† –°–ª–æ–≤: ${wordCount}
üìè –°–∏–º–≤–æ–ª–æ–≤: ${charCount} (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤: ${charCountWithoutSpaces})
üéØ ${selectionInfo}
        `.trim();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
        vscode.window.showInformationMessage(analysisResult);

        // –¢–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏–º –≤ –ø–∞–Ω–µ–ª—å –≤—ã–≤–æ–¥–∞ –¥–ª—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        const outputChannel = vscode.window.createOutputChannel('–ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞');
        outputChannel.show();
        outputChannel.appendLine('=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê –§–ê–ô–õ–ê ===');
        outputChannel.appendLine(`–§–∞–π–ª: ${fileName}`);
        outputChannel.appendLine(`–ü—É—Ç—å: ${document.fileName}`);
        outputChannel.appendLine(`–Ø–∑—ã–∫: ${languageId}`);
        outputChannel.appendLine(`–°—Ç—Ä–æ–∫: ${lineCount} (–ø—É—Å—Ç—ã—Ö: ${emptyLines})`);
        outputChannel.appendLine(`–°–ª–æ–≤: ${wordCount}`);
        outputChannel.appendLine(`–°–∏–º–≤–æ–ª–æ–≤: ${charCount} (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤: ${charCountWithoutSpaces})`);
        outputChannel.appendLine(`–†–∞–∑–º–µ—Ä: ${(charCount / 1024).toFixed(2)} KB`);
        outputChannel.appendLine(selectionInfo);
        outputChannel.appendLine('================================');
    });

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ (—Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏)
    let quickAnalyzeCommand = vscode.commands.registerCommand('my-simple-plugin.quickAnalyze', async () => {
        const editor = vscode.window.activeTextEditor;
        if (!editor) {
            vscode.window.showWarningMessage('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞!');
            return;
        }

        const document = editor.document;
        const text = document.getText();
        const lineCount = document.lineCount;
        const wordCount = text.split(/\s+/).filter(word => word.length > 0).length;
        
        // –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤ —Å—Ç–∞—Ç—É—Å –±–∞—Ä–µ
        const statusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 100);
        statusBarItem.text = `üìä ${lineCount} —Å—Ç—Ä–æ–∫, ${wordCount} —Å–ª–æ–≤`;
        statusBarItem.tooltip = '–ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞';
        statusBarItem.show();
        
        // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            statusBarItem.hide();
            statusBarItem.dispose();
        }, 5000);
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
    context.subscriptions.push(helloWorldCommand);
    context.subscriptions.push(showTimeCommand);
    context.subscriptions.push(analyzeFileCommand);
    context.subscriptions.push(quickAnalyzeCommand);
}

export function deactivate() {
    console.log('–î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞ "My Simple Plugin"');
}